#! /usr/bin/env python
# -*- coding: utf8 -*-

from bitbots.debug import Scope
from bitbots.util.config import Config
from ros.bitbots_hcm.src.bitbots_hcm.lowlevel.controller.controller import Controller
from ros.bitbots_hcm.src.bitbots_hcm.lowlevel.controller.controller import get_mx28_register_table, get_cm730_register_table

debug = Scope("Motoroffseter")
import json
offset_config = Config(debug, "offset").get_config()

from bitbots_hcm.lowlevel.serial import Serial
from bitbots_common.util import Joints

joints = Joints()

MX28 = get_mx28_register_table()
CM730 = get_cm730_register_table()
ID_CM730 = 200

import time

ctrl = Controller(Serial("/dev/ttyUSB0"))
ctrl.write_register(ID_CM730, CM730.dxl_power, 1)

# Augenfarbe setzen
ctrl.write_register(ID_CM730, CM730.led_eye, (255, 255, 255))
ctrl.write_register(ID_CM730, CM730.led_head, (255, 0, 0))
time.sleep(1)
try:
    while True:
        cid = int(raw_input("Witch Motor do you want to Calibrate? "))
        print "Calibrate Motor ", cid
        raw_input("Please move the Motor to 0Â° and press Enter")
        off = ctrl.read_register(cid, MX28.present_position)
        print "New offset is: " , off
        offset_config[joints.get_motor_name(cid)] = off
except (ValueError, KeyboardInterrupt):
    print "End"
finally:
    data = json.dumps(offset_config,sort_keys=True, indent=4)
    open("/home/darwin/offset.json","w+").write(data)
    print "Offsets Written to ~/offset.json, plase copy it into the git"
    time.sleep(1)
    ctrl.write_register(ID_CM730, CM730.led_head, (0, 255, 0))
    ctrl.write_register(ID_CM730, CM730.led_eye, (0, 0, 0))
    ctrl.write_register(ID_CM730, CM730.dxl_power, 0)
debug << "Ready"
